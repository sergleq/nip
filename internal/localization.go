package internal

// Locale представляет локализацию для определенного языка
type Locale struct {
	WelcomeMessage        string
	ProcessingMessage     string
	InvalidURLMessage     string
	ErrorProcessingMsg    string
	ErrorSendingMsg       string
	SuccessMessage        string
	ServerOverloadMessage string

	// Локализация для markdown файлов
	MetadataSection string
	SourceLabel     string
	AuthorLabel     string
	DateLabel       string
	ProcessedLabel  string
	ContentSection  string
	FooterText      string
	UnknownSource   string
}

// locales содержит все поддерживаемые языки
var locales = map[string]Locale{
	"ru": {
		WelcomeMessage: `Привет! Я бот для преобразования ссылок в markdown файлы.

Отправьте мне ссылку на веб-страницу, и я создам для вас markdown файл с очищенным содержимым.

Поддерживаемые форматы:
- Статьи и новости
- Блог-посты
- Документация

Просто отправьте ссылку!`,
		ProcessingMessage:     "⏳ Обрабатываю ссылку...",
		InvalidURLMessage:     "Пожалуйста, отправьте валидную ссылку на веб-страницу.",
		ErrorProcessingMsg:    "❌ Не удалось обработать ссылку. Проверьте, что ссылка корректна и доступна.",
		ErrorSendingMsg:       "❌ Не удалось отправить файл.",
		SuccessMessage:        "✅ Файл успешно создан!",
		ServerOverloadMessage: "⚠️ Сервер перегружен. Попробуйте позже.",

		// Локализация для markdown файлов
		MetadataSection: "## Метаинформация",
		SourceLabel:     "**Источник:**",
		AuthorLabel:     "**Автор:**",
		DateLabel:       "**Дата:**",
		ProcessedLabel:  "**Обработано:**",
		ContentSection:  "## Содержание",
		FooterText:      "*Этот документ был автоматически создан ботом для преобразования веб-страниц в markdown формат.*",
		UnknownSource:   "Неизвестный источник",
	},
	"en": {
		WelcomeMessage: `Hello! I'm a bot for converting links to markdown files.

Send me a link to a web page, and I'll create a markdown file with cleaned content for you.

Supported formats:
- Articles and news
- Blog posts
- Documentation

Just send a link!`,
		ProcessingMessage:     "⏳ Processing link...",
		InvalidURLMessage:     "Please send a valid link to a web page.",
		ErrorProcessingMsg:    "❌ Failed to process the link. Check that the link is correct and accessible.",
		ErrorSendingMsg:       "❌ Failed to send the file.",
		SuccessMessage:        "✅ File successfully created!",
		ServerOverloadMessage: "⚠️ Server is overloaded. Please try again later.",

		// Локализация для markdown файлов
		MetadataSection: "## Metadata",
		SourceLabel:     "**Source:**",
		AuthorLabel:     "**Author:**",
		DateLabel:       "**Date:**",
		ProcessedLabel:  "**Processed:**",
		ContentSection:  "## Content",
		FooterText:      "*This document was automatically generated by a bot for converting web pages to markdown format.*",
		UnknownSource:   "Unknown source",
	},
}

// GetLocale возвращает локализацию для командной строки (по умолчанию русский)
func GetLocale(message interface{}) Locale {
	// Для командной строки возвращаем русскую локализацию по умолчанию
	return locales["ru"]
}

// getSupportedLanguages возвращает список поддерживаемых языков
func getSupportedLanguages() []string {
	languages := make([]string, 0, len(locales))
	for lang := range locales {
		languages = append(languages, lang)
	}
	return languages
}
